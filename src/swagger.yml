openapi: 3.0.0
info:
  version: 0.0.1
  title: Snacker-Tracker-Reporter
  description: Tracking the snacks at the office

servers:
  - url: /v1

tags:
  - name: scans
    description: >
      Scanning barcodes
  - name: codes
    description: >
      Code management

paths:
  /stats/top-scans:
    get:
      operationId: GetTopScans
      tags:
        - stats
      responses:
        "200":
          description: |
            Return the list of most scanned items
          headers:
            X-Swagger-Response-Valid:
              schema:
                type: boolean
            X-Swagger-Response-Error-Count:
              schema:
                type: integer
                format: int64
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopScanList"

  /codes:
    get:
      operationId: ListCodes
      tags:
        - codes
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            format: int64
            default: 100
        - in: query
          name: offset
          schema:
            type: integer
            format: int64
            default: 0
      responses:
        "200":
          description: |
            Return a list of participating products
          headers:
            X-Swagger-Response-Valid:
              schema:
                type: boolean
            X-Swagger-Response-Error-Count:
              schema:
                type: integer
                format: int64
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CodeList"

    post:
      operationId: CreateCode
      tags:
        - codes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCodePayload"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CreateCodePayload"

        required: true
      responses:
        "201":
          description: |
            Create a barcode
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Code"
  /codes/{code}:
    get:
      operationId: GetCode
      tags:
        - codes
      parameters:
        - in: path
          name: code
          required: true
          schema:
            type: string
      responses:
        "200":
          description: |
            Get a barcode
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Code"

    patch:
      operationId: PatchCode
      tags:
        - codes
      parameters:
        - in: path
          name: code
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchCodePayload"
      responses:
        "201":
          description: |
            Update a barcode
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Code"

  /codes/{code}/pictures:
    get:
      operationId: ListCodePictures
      tags:
        - codes
      parameters:
        - in: path
          required: true
          name: code
          schema:
            type: string
      responses:
        "200":
          description: |
            Return a list of pictures for a code
          headers:
            X-Swagger-Response-Valid:
              schema:
                type: boolean
            X-Swagger-Response-Error-Count:
              schema:
                type: integer
                format: int64
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CodePictureList"

    post:
      operationId: CreateCodePicture
      tags:
        - codes
      parameters:
        - in: path
          name: code
          required: true
          schema:
            type: string
      responses:
        "201":
          description: |
            Picture uploaded
          headers:
            X-Swagger-Response-Valid:
              schema:
                type: boolean
            X-Swagger-Response-Error-Count:
              schema:
                type: integer
                format: int64
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CodePicture"

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                picture:
                  type: string
                  format: binary

  /scans:
    get:
      operationId: ListScans
      tags:
        - scans
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            format: int64
            default: 100
        - in: query
          name: offset
          schema:
            type: integer
            format: int64
            default: 0
      responses:
        "200":
          description: |
            Return a list of participating products
          headers:
            X-Swagger-Response-Valid:
              schema:
                type: boolean
            X-Swagger-Response-Error-Count:
              schema:
                type: integer
                format: int64
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScanList"

    post:
      operationId: CreateScan
      tags:
        - scans
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateScanPayload"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CreateScanPayload"

        required: true
      responses:
        "201":
          description: |
            Record a scan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Scan"

  /scans/{scanId}:
    parameters:
      - name: scanId
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: GetScan
      tags:
        - scans
      responses:
        "200":
          description: |
            Scan Details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Scan"
    delete:
      operationId: DeleteScan
      tags:
        - scans
      responses:
        "201":
          description: |
            Scan Deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Scan"

components:
  schemas:
    Pagination:
      type: object
      additionalProperties: false
      properties:
        size:
          type: integer
          format: int64
        next:
          type: string

    ErrorResponse:
      type: object
      properties:
        message:
          type: string

    Scan:
      type: object
      additionalProperties: false
      required:
        - id
        - code
        - scanned_at
        - created_at
      properties:
        id:
          type: string
          format: uuid
        code:
          type: string
        scanned_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time


    CreateScanPayload:
      type: object
      additionalProperties: false
      required:
        - code
      properties:
        scanned_at:
          type: string
          format: date-time
        code:
          type: string

    ScanList:
      type: object
      additionalProperties: false
      required:
        - pagination
        - items
      properties:
        pagination:
          $ref: "#/components/schemas/Pagination"
        items:
          type: array
          items:
            $ref: "#/components/schemas/Scan"

    Code:
      type: object
      additionalProperties: false
      required:
        - code
        - name
        - created_at
        - updated_at
      properties:
        code:
          type: string
        name:
          type: string
        url:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CreateCodePayload:
      type: object
      additionalProperties: false
      required:
        - code
        - name
      properties:
        code:
          type: string
        name:
          type: string
        url:
          type: string

    PatchCodePayload:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string

    CodeList:
      type: object
      properties:
        pagination:
          $ref: "#/components/schemas/Pagination"
        items:
          type: array
          items:
            $ref: "#/components/schemas/Code"

    CodePictureList:
      type: object
      required:
        - items
      properties:
        pagination:
          $ref: "#/components/schemas/Pagination"
        items:
          type: array
          items:
            $ref: "#/components/schemas/CodePicture"

    CodePicture:
      type: object
      additionalProperties: false
      required:
        - id
        - url
        - last_modified
        - size
      properties:
        id:
          type: string
        url:
          type: string
        last_modified:
          type: string
          format: datetime
        size:
          type: number
          format: int64


    TopScanList:
      type: object
      required:
        - count
        - last_scan
        - first_scan
        - code
      properties:
        count:
          type: number
          format: int64
        last_scan:
          type: string
          format: date-time
        first_scan:
          type: string
          format: date-time
        code:
          type: string
